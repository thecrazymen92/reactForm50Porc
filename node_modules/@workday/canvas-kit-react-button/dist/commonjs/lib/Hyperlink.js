"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var canvas_kit_react_core_1 = require("@workday/canvas-kit-react-core");
var canvas_kit_labs_react_core_1 = require("@workday/canvas-kit-labs-react-core");
var types_1 = require("./types");
var canvas_kit_react_common_1 = require("@workday/canvas-kit-react-common");
var Anchor = canvas_kit_react_common_1.styled('a')(__assign({ fontFamily: canvas_kit_labs_react_core_1.type.body.fontFamily }, canvas_kit_labs_react_core_1.type.variant.link), function (_a) {
    var variant = _a.variant;
    if (variant === types_1.TextButtonVariant.Inverse) {
        return {
            color: canvas_kit_react_core_1.colors.frenchVanilla100,
            '&:hover': {
                color: canvas_kit_react_core_1.colors.frenchVanilla100,
                background: 'rgba(255, 255, 255, 0.1)',
            },
            '&:focus': {
                boxShadow: "0 0 0 2px " + canvas_kit_react_core_1.colors.frenchVanilla100,
            },
            '&:active': {
                color: canvas_kit_react_core_1.colors.blueberry600,
                background: canvas_kit_react_core_1.colors.soap200,
            },
        };
    }
    return {};
});
var Hyperlink = function (_a) {
    var variant = _a.variant, href = _a.href, elemProps = __rest(_a, ["variant", "href"]);
    return (React.createElement(Anchor, __assign({ variant: variant, href: href }, elemProps)));
};
Hyperlink.Variant = types_1.TextButtonVariant;
exports.default = Hyperlink;
