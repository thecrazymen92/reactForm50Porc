"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var get_1 = __importDefault(require("lodash/get"));
var core_1 = require("@emotion/core");
var index_1 = require("./index");
var getFilledTheme = function (theme) { return (__assign(__assign({}, theme), { canvas: index_1.createCanvasTheme(theme.canvas) })); };
function useTheme(theme) {
    if (theme && theme.canvas) {
        return getFilledTheme(theme);
    }
    try {
        var contextTheme = React.useContext(core_1.ThemeContext);
        if (contextTheme && contextTheme.canvas) {
            return getFilledTheme(contextTheme);
        }
    }
    catch (e) {
    }
    var windowTheme = typeof window !== 'undefined' && get_1.default(window, 'window.workday.canvas.theme');
    if (windowTheme) {
        return getFilledTheme({ canvas: windowTheme });
    }
    return { canvas: index_1.defaultCanvasTheme };
}
exports.useTheme = useTheme;
