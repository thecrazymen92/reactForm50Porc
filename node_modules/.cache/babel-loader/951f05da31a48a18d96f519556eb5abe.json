{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { spacing } from '@workday/canvas-kit-react-core';\nimport isPropValid from '@emotion/is-prop-valid';\nimport { ButtonIconPosition } from '../types';\nimport { SystemIcon } from '@workday/canvas-kit-react-icon';\nimport { styled } from '@workday/canvas-kit-react-common';\nvar ICON_SIZE = 24;\nvar SMALL_ICON_SIZE = 20;\nvar ButtonLabelIconStyled = styled('span', {\n  shouldForwardProp: function shouldForwardProp(prop) {\n    return isPropValid(prop) && prop !== 'size';\n  }\n})({\n  display: 'inline-block'\n}, function (_a) {\n  var size = _a.size;\n  return {\n    width: size === 'small' ? SMALL_ICON_SIZE : ICON_SIZE,\n    height: size === 'small' ? SMALL_ICON_SIZE : ICON_SIZE\n  };\n}, function (_a) {\n  var iconPosition = _a.iconPosition,\n      dropdown = _a.dropdown;\n  return {\n    marginLeft: iconPosition === ButtonIconPosition.Right ? undefined : \"-\" + (dropdown ? spacing.xxs : spacing.xxxs) + \" !important\",\n    marginRight: iconPosition === ButtonIconPosition.Right ? \"-\" + (dropdown ? spacing.xxs : spacing.xxxs) + \" !important\" : undefined\n  };\n});\nexport var ButtonLabelIcon = function ButtonLabelIcon(_a) {\n  var icon = _a.icon,\n      size = _a.size,\n      dropdown = _a.dropdown,\n      iconPosition = _a.iconPosition,\n      elemProps = __rest(_a, [\"icon\", \"size\", \"dropdown\", \"iconPosition\"]);\n\n  if (icon === undefined) {\n    return null;\n  }\n\n  var iconSize = size === 'small' ? SMALL_ICON_SIZE : undefined;\n  return React.createElement(ButtonLabelIconStyled, __assign({\n    iconPosition: iconPosition,\n    dropdown: dropdown,\n    size: size\n  }, elemProps), React.createElement(SystemIcon, {\n    size: iconSize,\n    icon: icon\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}