/// <reference types="lodash/common/common" />
/// <reference types="lodash/common/array" />
/// <reference types="lodash/common/collection" />
/// <reference types="lodash/common/date" />
/// <reference types="lodash/common/function" />
/// <reference types="lodash/common/lang" />
/// <reference types="lodash/common/math" />
/// <reference types="lodash/common/number" />
/// <reference types="lodash/common/object" />
/// <reference types="lodash/common/seq" />
/// <reference types="lodash/common/string" />
/// <reference types="lodash/common/util" />
import { CSSObject } from '@emotion/core';
import { EmotionCanvasTheme } from '../theming/index';
interface FocusRingOptions {
    width?: number;
    separation?: number;
    animate?: boolean;
    inset?: 'inner' | 'outer';
    innerColor?: string;
    outerColor?: string;
    memoize?: boolean;
}
declare function calculateFocusRing({ width, separation, animate, inset, innerColor, outerColor, }: Required<Pick<FocusRingOptions, Exclude<keyof FocusRingOptions, 'memoize' | 'inset'>>> & Pick<FocusRingOptions, 'inset'>): CSSObject;
export declare const memoizedFocusRing: typeof calculateFocusRing & import("lodash").MemoizedFunction;
export declare function focusRing(options?: FocusRingOptions, theme?: EmotionCanvasTheme): CSSObject;
export {};
//# sourceMappingURL=focusRing.d.ts.map
