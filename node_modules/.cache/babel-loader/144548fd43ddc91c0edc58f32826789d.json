{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { iconColors } from '@workday/canvas-kit-react-core';\nimport { CanvasIconTypes } from '@workday/design-assets-types';\nimport Icon from './Icon';\nexport var systemIconStyles = function systemIconStyles(_a) {\n  var accent = _a.accent,\n      accentHover = _a.accentHover,\n      _b = _a.background,\n      background = _b === void 0 ? 'transparent' : _b,\n      _c = _a.backgroundHover,\n      backgroundHover = _c === void 0 ? 'transparent' : _c,\n      _d = _a.color,\n      color = _d === void 0 ? iconColors.standard : _d,\n      _e = _a.colorHover,\n      colorHover = _e === void 0 ? iconColors.hover : _e,\n      fill = _a.fill,\n      fillHover = _a.fillHover;\n  return {\n    '& .wd-icon-fill': {\n      fill: fill || color\n    },\n    ':hover .wd-icon-fill': {\n      fill: fillHover || colorHover\n    },\n    '& .wd-icon-accent, & .wd-icon-accent2': {\n      fill: accent || color\n    },\n    ':hover .wd-icon-accent, :hover .wd-icon-accent2': {\n      fill: accentHover || colorHover\n    },\n    '& .wd-icon-background': {\n      fill: background\n    },\n    ':hover .wd-icon-background': {\n      fill: backgroundHover\n    }\n  };\n};\n\nvar SystemIcon = function (_super) {\n  __extends(SystemIcon, _super);\n\n  function SystemIcon() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SystemIcon.prototype.render = function () {\n    var _a = this.props,\n        _b = _a.background,\n        background = _b === void 0 ? 'transparent' : _b,\n        _c = _a.backgroundHover,\n        backgroundHover = _c === void 0 ? 'transparent' : _c,\n        _d = _a.color,\n        color = _d === void 0 ? iconColors.standard : _d,\n        _e = _a.colorHover,\n        colorHover = _e === void 0 ? iconColors.hover : _e,\n        icon = _a.icon,\n        iconRef = _a.iconRef,\n        accent = _a.accent,\n        accentHover = _a.accentHover,\n        fill = _a.fill,\n        fillHover = _a.fillHover,\n        size = _a.size,\n        elemProps = __rest(_a, [\"background\", \"backgroundHover\", \"color\", \"colorHover\", \"icon\", \"iconRef\", \"accent\", \"accentHover\", \"fill\", \"fillHover\", \"size\"]);\n\n    var style = systemIconStyles({\n      accent: accent,\n      accentHover: accentHover,\n      background: background,\n      backgroundHover: backgroundHover,\n      color: color,\n      colorHover: colorHover,\n      fill: fill,\n      fillHover: fillHover\n    });\n    return React.createElement(Icon, __assign({\n      src: icon,\n      type: CanvasIconTypes.System,\n      size: size,\n      styles: style,\n      iconRef: iconRef\n    }, elemProps));\n  };\n\n  return SystemIcon;\n}(React.Component);\n\nexport default SystemIcon;","map":null,"metadata":{},"sourceType":"module"}