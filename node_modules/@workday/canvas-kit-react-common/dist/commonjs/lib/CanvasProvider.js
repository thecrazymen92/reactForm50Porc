"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var emotion_theming_1 = require("emotion-theming");
var canvas_kit_react_core_1 = require("@workday/canvas-kit-react-core");
var theming_1 = require("../lib/theming");
var styled_1 = __importDefault(require("@emotion/styled"));
var DirectionContainer = styled_1.default('bdo')(function (_a) {
    var dir = _a.dir;
    return ({
        direction: dir,
    });
});
var CanvasProvider = (function (_super) {
    __extends(CanvasProvider, _super);
    function CanvasProvider() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CanvasProvider.prototype.render = function () {
        var _a = this.props, children = _a.children, theme = _a.theme;
        return (React.createElement(emotion_theming_1.ThemeProvider, { theme: theme },
            React.createElement(canvas_kit_react_core_1.InputProvider, null),
            React.createElement(DirectionContainer, { dir: (theme.canvas && theme.canvas.direction) || theming_1.defaultCanvasTheme.direction }, children)));
    };
    CanvasProvider.defaultProps = {
        theme: {
            canvas: theming_1.defaultCanvasTheme,
        },
    };
    return CanvasProvider;
}(React.Component));
exports.CanvasProvider = CanvasProvider;
