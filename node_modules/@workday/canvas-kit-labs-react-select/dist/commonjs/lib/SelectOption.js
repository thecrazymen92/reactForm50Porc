"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var canvas_kit_react_common_1 = require("@workday/canvas-kit-react-common");
var canvas_kit_react_core_1 = require("@workday/canvas-kit-react-core");
var optionPadding = 6;
var activeStyles = function (theme) {
    var activeBgColor = theme.canvas.palette.primary.main;
    return {
        backgroundColor: activeBgColor,
        color: canvas_kit_react_common_1.pickForegroundColor(activeBgColor),
    };
};
var Option = canvas_kit_react_common_1.styled('li')(__assign(__assign({}, canvas_kit_react_core_1.type.body), { cursor: 'default', listStyle: 'none', minHeight: canvas_kit_react_core_1.type.body.lineHeight, textAlign: 'left' }), function (_a) {
    var disabled = _a["aria-disabled"], focused = _a.focused, interactive = _a.interactive, theme = _a.theme;
    if (disabled) {
        return {
            color: canvas_kit_react_core_1.colors.licorice100,
        };
    }
    else if (focused) {
        return __assign({}, activeStyles(theme));
    }
    else {
        var selectedBgColor = theme.canvas.palette.primary.lightest;
        var selectedStyles = {
            '&[aria-selected="true"]': {
                backgroundColor: selectedBgColor,
                color: canvas_kit_react_common_1.pickForegroundColor(selectedBgColor),
            },
        };
        var interactiveStyles = interactive
            ? {
                '&:hover': {
                    backgroundColor: canvas_kit_react_core_1.commonColors.hoverBackground,
                },
                '&:active, &:active[aria-selected="true"]': __assign({}, activeStyles(theme)),
            }
            : {};
        return __assign(__assign({}, interactiveStyles), selectedStyles);
    }
}, function (_a) {
    var error = _a.error;
    return ({
        padding: optionPadding + "px " + (error === canvas_kit_react_common_1.ErrorType.Alert ? optionPadding - 1 : optionPadding) + "px",
    });
});
var SelectOption = function (_a) {
    var children = _a.children, _b = _a.focused, focused = _b === void 0 ? false : _b, _c = _a.interactive, interactive = _c === void 0 ? true : _c, optionRef = _a.optionRef, value = _a.value, elemProps = __rest(_a, ["children", "focused", "interactive", "optionRef", "value"]);
    return (React.createElement(Option, __assign({ "data-value": value, focused: focused, interactive: interactive, ref: optionRef, role: "option" }, elemProps), children));
};
exports.default = SelectOption;
