var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as React from 'react';
import { ThemeProvider } from 'emotion-theming';
import { InputProvider } from '@workday/canvas-kit-react-core';
import { defaultCanvasTheme } from '../lib/theming';
import styled from '@emotion/styled';
var DirectionContainer = styled('bdo')(function (_a) {
    var dir = _a.dir;
    return ({
        direction: dir,
    });
});
var CanvasProvider = (function (_super) {
    __extends(CanvasProvider, _super);
    function CanvasProvider() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CanvasProvider.prototype.render = function () {
        var _a = this.props, children = _a.children, theme = _a.theme;
        return (React.createElement(ThemeProvider, { theme: theme },
            React.createElement(InputProvider, null),
            React.createElement(DirectionContainer, { dir: (theme.canvas && theme.canvas.direction) || defaultCanvasTheme.direction }, children)));
    };
    CanvasProvider.defaultProps = {
        theme: {
            canvas: defaultCanvasTheme,
        },
    };
    return CanvasProvider;
}(React.Component));
export { CanvasProvider };
