{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport get from 'lodash/get';\nimport { ThemeContext } from '@emotion/core';\nimport { defaultCanvasTheme, createCanvasTheme } from './index';\n\nvar getFilledTheme = function getFilledTheme(theme) {\n  return __assign(__assign({}, theme), {\n    canvas: createCanvasTheme(theme.canvas)\n  });\n};\n\nexport function useTheme(theme) {\n  if (theme && theme.canvas) {\n    return getFilledTheme(theme);\n  }\n\n  try {\n    var contextTheme = React.useContext(ThemeContext);\n\n    if (contextTheme && contextTheme.canvas) {\n      return getFilledTheme(contextTheme);\n    }\n  } catch (e) {}\n\n  var windowTheme = typeof window !== 'undefined' && get(window, 'window.workday.canvas.theme');\n\n  if (windowTheme) {\n    return getFilledTheme({\n      canvas: windowTheme\n    });\n  }\n\n  return {\n    canvas: defaultCanvasTheme\n  };\n}","map":null,"metadata":{},"sourceType":"module"}