"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function stripUnit(value) {
    return parseInt(("" + value).replace('px', ''), 10);
}
exports.stripUnit = stripUnit;
var margin = {
    prop: 'margin',
    direction: ['Top', 'Right', 'Bottom', 'Left'],
};
var marginTop = {
    prop: 'margin',
    direction: ['Top'],
};
var marginRight = {
    prop: 'margin',
    direction: ['Right'],
};
var marginBottom = {
    prop: 'margin',
    direction: ['Bottom'],
};
var marginLeft = {
    prop: 'margin',
    direction: ['Left'],
};
var marginX = {
    prop: 'margin',
    direction: ['Left', 'Right'],
};
var marginY = {
    prop: 'margin',
    direction: ['Top', 'Bottom'],
};
var padding = {
    prop: 'padding',
    direction: ['Top', 'Right', 'Bottom', 'Left'],
};
var paddingTop = {
    prop: 'padding',
    direction: ['Top'],
};
var paddingRight = {
    prop: 'padding',
    direction: ['Right'],
};
var paddingBottom = {
    prop: 'padding',
    direction: ['Bottom'],
};
var paddingLeft = {
    prop: 'padding',
    direction: ['Left'],
};
var paddingX = {
    prop: 'padding',
    direction: ['Left', 'Right'],
};
var paddingY = {
    prop: 'padding',
    direction: ['Top', 'Bottom'],
};
var spacingProps = {
    m: margin,
    mt: marginTop,
    mr: marginRight,
    mb: marginBottom,
    ml: marginLeft,
    mx: marginX,
    my: marginY,
    p: padding,
    pt: paddingTop,
    pr: paddingRight,
    pb: paddingBottom,
    pl: paddingLeft,
    px: paddingX,
    py: paddingY,
};
exports.space = function (props) {
    var spacingReg = /^[mp][trblxy]?$/;
    var keys = Object.keys(props)
        .filter(function (key) { return spacingReg.test(key); })
        .sort();
    var styles = {};
    keys.forEach(function (key) {
        var value = props[key];
        if (typeof value === 'undefined') {
            return;
        }
        var numericValue = typeof value === 'string' ? stripUnit(value) : value;
        var style = spacingProps[key];
        style.direction.forEach(function (d) {
            var cssAttribute = "" + style.prop + d;
            styles[cssAttribute] = numericValue + "px";
        });
    });
    return styles;
};
exports.default = exports.space;
