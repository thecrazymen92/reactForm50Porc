import React from 'react';
import { GrowthBehavior, ErrorType, Themeable } from '@workday/canvas-kit-react-common';
import { MenuPlacement, MenuVisibility } from './types';
interface OptionData {
    [key: string]: any;
}
export interface Option {
    data?: OptionData;
    disabled?: boolean;
    id?: string;
    label?: string;
    value: string;
}
export interface NormalizedOption extends Option {
    data: OptionData;
    disabled: boolean;
    id: string;
    label: string;
}
export interface RenderableOption extends NormalizedOption {
    focused: boolean;
    selected: boolean;
}
export interface RenderOptionFunction {
    (option: RenderableOption): React.ReactNode;
}
export interface CoreSelectBaseProps extends Themeable, GrowthBehavior, Pick<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'>, Pick<React.SelectHTMLAttributes<HTMLSelectElement>, 'required'>, Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, 'onChange'> {
    error?: ErrorType;
    renderOption?: RenderOptionFunction;
    value?: string;
}
export interface SelectBaseProps extends CoreSelectBaseProps {
    buttonRef: React.RefObject<HTMLButtonElement>;
    focusedOptionIndex?: number;
    inputRef?: React.Ref<HTMLInputElement>;
    menuPlacement?: MenuPlacement;
    menuRef?: React.RefObject<HTMLUListElement>;
    menuVisibility?: MenuVisibility;
    onKeyDown?: (event: React.KeyboardEvent) => void;
    onMenuBlur?: (event: React.FocusEvent) => void;
    onMenuCloseOnEscape?: () => void;
    onOptionSelection?: (index: number) => void;
    options: NormalizedOption[];
    shouldMenuAutoFlip?: boolean;
    shouldMenuAutoFocus?: boolean;
}
export declare const buttonBorderWidth = 1;
export declare const buttonDefaultWidth = 280;
declare const SelectBase: ({ "aria-labelledby": ariaLabelledBy, "aria-required": ariaRequired, buttonRef, disabled, error, focusedOptionIndex, grow, inputRef, menuPlacement, menuRef, menuVisibility, onChange, onKeyDown, onMenuBlur, onMenuCloseOnEscape, onOptionSelection, options, renderOption, required, shouldMenuAutoFlip, shouldMenuAutoFocus, value, ...elemProps }: SelectBaseProps) => JSX.Element;
export default SelectBase;
//# sourceMappingURL=SelectBase.d.ts.map