var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import * as React from 'react';
import { caretDownIcon } from '@workday/canvas-system-icons-web';
import { useTheme } from '@workday/canvas-kit-react-common';
import { DropdownButtonVariant, ButtonIconPosition } from './types';
import { ButtonContainer, ButtonLabel, ButtonLabelIcon } from './parts';
import { getButtonColors } from './Button';
var DropdownButton = function (_a) {
    var _b = _a.theme, theme = _b === void 0 ? useTheme() : _b, _c = _a.variant, variant = _c === void 0 ? DropdownButtonVariant.Secondary : _c, _d = _a.size, size = _d === void 0 ? 'medium' : _d, buttonRef = _a.buttonRef, children = _a.children, elemProps = __rest(_a, ["theme", "variant", "size", "buttonRef", "children"]);
    return (React.createElement(ButtonContainer, __assign({ colors: getButtonColors(variant, theme), size: size, ref: buttonRef }, elemProps),
        React.createElement(ButtonLabel, null, children),
        React.createElement(ButtonLabelIcon, { size: size, icon: caretDownIcon, iconPosition: ButtonIconPosition.Right, dropdown: true })));
};
DropdownButton.Variant = DropdownButtonVariant;
DropdownButton.Size = {
    Medium: 'medium',
    Large: 'large',
};
export default DropdownButton;
