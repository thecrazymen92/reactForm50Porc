import * as React from 'react';
import { ErrorType } from '@workday/canvas-kit-react-common';
import { CoreSelectBaseProps, Option } from './SelectBase';
import { MenuVisibility } from './types';
export interface SelectProps extends CoreSelectBaseProps {
    options: (Option | string)[];
}
interface SelectState {
    focusedOptionIndex: number;
    menuVisibility: MenuVisibility;
}
declare class Select extends React.Component<SelectProps, SelectState> {
    static ErrorType: typeof ErrorType;
    state: Readonly<SelectState>;
    private buttonRef;
    private inputRef;
    private menuRef;
    private menuAnimationTimer;
    private keysSoFar;
    private clearKeysSoFarTimeout;
    private clearKeysSoFarTimer;
    private normalizedOptions;
    private areOptionsDefined;
    private setNormalizedOptions;
    private getIndexByStartString;
    private focusNextEnabledOption;
    private updateStateFromValue;
    private focusButton;
    private setMenuAnimationTimeout;
    private openMenu;
    private closeMenu;
    private toggleMenu;
    private fireChangeEvent;
    private handleKeyboardTypeAhead;
    private startClearKeysSoFarTimer;
    constructor(props: SelectProps);
    componentDidMount(): void;
    componentDidUpdate(prevProps: SelectProps): void;
    componentWillUnmount(): void;
    handleMouseDown: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;
    handleClick: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;
    handleOptionSelection: (index: number) => void;
    handleMenuBlur: (event: React.FocusEvent<Element>) => void;
    handleMenuCloseOnKeyPress: () => void;
    handleKeyDown: (event: React.KeyboardEvent<Element>) => void;
    render(): JSX.Element;
}
export default Select;
//# sourceMappingURL=Select.d.ts.map