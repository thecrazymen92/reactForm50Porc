{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { jsx, ClassNames } from '@emotion/core';\nimport * as React from 'react';\nimport { validateIconType } from './utils';\n\nvar Svg = function (_super) {\n  __extends(Svg, _super);\n\n  function Svg() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Svg.prototype.render = function () {\n    var _a = this.props,\n        src = _a.src,\n        styles = _a.styles,\n        type = _a.type,\n        iconRef = _a.iconRef,\n        elemProps = __rest(_a, [\"src\", \"styles\", \"type\", \"iconRef\"]);\n\n    try {\n      validateIconType(src, type);\n    } catch (e) {\n      console.error(e);\n      return null;\n    }\n\n    return jsx(ClassNames, null, function (_a) {\n      var css = _a.css,\n          cx = _a.cx;\n      return jsx(\"span\", __assign({}, elemProps, {\n        dangerouslySetInnerHTML: {\n          __html: src.svg\n        },\n        className: cx(css(styles, {\n          display: 'inline-block',\n          '& svg': {\n            display: 'block'\n          }\n        }), elemProps.className),\n        ref: iconRef\n      }));\n    });\n  };\n\n  return Svg;\n}(React.Component);\n\nexport default Svg;","map":null,"metadata":{},"sourceType":"module"}