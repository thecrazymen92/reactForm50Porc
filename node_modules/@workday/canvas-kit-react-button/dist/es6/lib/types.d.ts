import { CSSObject } from '@emotion/core';
export declare enum ButtonVariant {
    Primary = "primary",
    Secondary = "secondary"
}
export declare enum ButtonIconPosition {
    Left = "iconPositionLeft",
    Right = "iconPositionRight"
}
export declare const ButtonSize: {
    readonly Small: "small";
    readonly Medium: "medium";
    readonly Large: "large";
};
export declare enum OutlineButtonVariant {
    Primary = "outlinePrimary",
    Secondary = "outlineSecondary",
    Inverse = "outlineInverse"
}
export declare enum DropdownButtonVariant {
    Primary = "dropdownPrimary",
    Secondary = "dropdownSecondary"
}
export declare enum IconButtonVariant {
    Square = "square",
    SquareFilled = "squareFilled",
    Plain = "plain",
    Circle = "circle",
    CircleFilled = "circleFilled",
    Inverse = "inverse",
    InverseFilled = "inverseFilled"
}
export declare enum TextButtonVariant {
    Default = "text",
    Inverse = "textInverse"
}
export declare enum DeprecatedButtonVariant {
    Primary = "deprecatedPrimary",
    Secondary = "deprecatedSecondary",
    Delete = "deprecatedDelete"
}
export declare type AllButtonVariants = ButtonVariant | DropdownButtonVariant | TextButtonVariant | IconButtonVariant | DeprecatedButtonVariant;
export interface ButtonStateColors {
    background?: string;
    border?: string;
    icon?: string;
    iconFill?: boolean;
    label?: string;
    labelData?: string;
}
export interface ButtonColors {
    default: ButtonStateColors;
    hover: ButtonStateColors;
    active: ButtonStateColors;
    focus: ButtonStateColors & {
        focusRing?: CSSObject;
    };
    disabled: ButtonStateColors;
}
export declare type AnchorButtonProps<P, K extends keyof P = never> = Omit<P, keyof Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, K>> & React.AnchorHTMLAttributes<HTMLAnchorElement>;
export declare type ButtonOrAnchorComponent<P, V = undefined, K extends keyof P = never> = {
    (props: {
        as: 'a';
    } & AnchorButtonProps<P, K>): React.ReactElement;
    (props: P): React.ReactElement;
    Variant: V;
    Size: Partial<typeof ButtonSize>;
};
//# sourceMappingURL=types.d.ts.map