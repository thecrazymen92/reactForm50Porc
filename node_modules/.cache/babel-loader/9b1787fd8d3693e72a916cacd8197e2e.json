{"ast":null,"code":"import { keyframes } from '@emotion/core';\nimport canvas from '@workday/canvas-kit-react-core';\nimport { defaultCanvasTheme } from '../theming/index';\nimport memoize from 'lodash/memoize';\n\nfunction calculateFocusRing(_a) {\n  var width = _a.width,\n      separation = _a.separation,\n      animate = _a.animate,\n      inset = _a.inset,\n      innerColor = _a.innerColor,\n      outerColor = _a.outerColor;\n  var boxShadow, innerWidth, outerWidth;\n\n  switch (inset) {\n    case 'outer':\n      innerWidth = width + separation;\n      outerWidth = separation;\n      boxShadow = \"inset 0 0 0 \" + outerWidth + \"px \" + outerColor + \", inset 0 0 0 \" + innerWidth + \"px \" + innerColor;\n      break;\n\n    case 'inner':\n      innerWidth = separation;\n      outerWidth = width;\n      boxShadow = \"inset 0 0 0 \" + innerWidth + \"px \" + innerColor + \", 0 0 0 \" + outerWidth + \"px \" + outerColor;\n      break;\n\n    default:\n      innerWidth = separation;\n      outerWidth = width + separation;\n      boxShadow = \"0 0 0 \" + innerWidth + \"px \" + innerColor + \", 0 0 0 \" + outerWidth + \"px \" + outerColor;\n      break;\n  }\n\n  if (animate) {\n    var fadeIn = keyframes({\n      '0%': {\n        boxShadow: boxShadow\n      },\n      '100%': {\n        boxShadow: boxShadow\n      }\n    });\n    return {\n      animation: fadeIn + \" 100ms\",\n      boxShadow: boxShadow\n    };\n  }\n\n  return {\n    boxShadow: boxShadow\n  };\n}\n\nexport var memoizedFocusRing = memoize(calculateFocusRing, function () {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  return JSON.stringify(args);\n});\nexport function focusRing(options, theme) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _a = options.width,\n      width = _a === void 0 ? 2 : _a,\n      _b = options.separation,\n      separation = _b === void 0 ? 0 : _b,\n      _c = options.animate,\n      animate = _c === void 0 ? true : _c,\n      _d = options.innerColor,\n      innerColor = _d === void 0 ? canvas.colors.frenchVanilla100 : _d,\n      _e = options.outerColor,\n      outerColor = _e === void 0 ? theme && theme.canvas ? theme.canvas.palette.common.focusOutline : defaultCanvasTheme.palette.common.focusOutline : _e,\n      _f = options.memoize,\n      memoize = _f === void 0 ? true : _f,\n      inset = options.inset;\n  var args = {\n    width: width,\n    separation: separation,\n    innerColor: innerColor,\n    outerColor: outerColor,\n    animate: animate,\n    inset: inset\n  };\n\n  if (memoize) {\n    return memoizedFocusRing(args);\n  }\n\n  return calculateFocusRing(args);\n}","map":null,"metadata":{},"sourceType":"module"}