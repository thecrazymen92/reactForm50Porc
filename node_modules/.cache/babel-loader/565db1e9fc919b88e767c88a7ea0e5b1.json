{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { caretDownIcon } from '@workday/canvas-system-icons-web';\nimport { useTheme } from '@workday/canvas-kit-react-common';\nimport { DropdownButtonVariant, ButtonIconPosition } from './types';\nimport { ButtonContainer, ButtonLabel, ButtonLabelIcon } from './parts';\nimport { getButtonColors } from './Button';\n\nvar DropdownButton = function DropdownButton(_a) {\n  var _b = _a.theme,\n      theme = _b === void 0 ? useTheme() : _b,\n      _c = _a.variant,\n      variant = _c === void 0 ? DropdownButtonVariant.Secondary : _c,\n      _d = _a.size,\n      size = _d === void 0 ? 'medium' : _d,\n      buttonRef = _a.buttonRef,\n      children = _a.children,\n      elemProps = __rest(_a, [\"theme\", \"variant\", \"size\", \"buttonRef\", \"children\"]);\n\n  return React.createElement(ButtonContainer, __assign({\n    colors: getButtonColors(variant, theme),\n    size: size,\n    ref: buttonRef\n  }, elemProps), React.createElement(ButtonLabel, null, children), React.createElement(ButtonLabelIcon, {\n    size: size,\n    icon: caretDownIcon,\n    iconPosition: ButtonIconPosition.Right,\n    dropdown: true\n  }));\n};\n\nDropdownButton.Variant = DropdownButtonVariant;\nDropdownButton.Size = {\n  Medium: 'medium',\n  Large: 'large'\n};\nexport default DropdownButton;","map":null,"metadata":{},"sourceType":"module"}