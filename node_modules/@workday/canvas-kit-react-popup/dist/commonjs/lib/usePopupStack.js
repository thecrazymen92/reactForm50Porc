"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var canvas_kit_popup_stack_1 = require("@workday/canvas-kit-popup-stack");
exports.usePopupStack = function (forwardRef, target) {
    var internalRef = react_1.default.useRef(null);
    var ref = (forwardRef || internalRef);
    var popupRef = react_1.default.useState(function () {
        var container = canvas_kit_popup_stack_1.PopupStack.createContainer();
        ref.current = container;
        return container;
    })[0];
    react_1.default.useLayoutEffect(function () {
        if (popupRef !== ref.current) {
            throw Error("The 'ref' passed to usePopupStack should not be applied to a React element. This will cause a runtime error where the PopupStack and React compete for the element. Instead use ReactDOM.createPortal(<YourComponent />, ref.current)");
        }
        var targetEl = target
            ? 'current' in target
                ? target.current || undefined
                : target
            : undefined;
        canvas_kit_popup_stack_1.PopupStack.add({ element: ref.current, owner: targetEl });
        var element = ref.current;
        return function () {
            canvas_kit_popup_stack_1.PopupStack.remove(element);
        };
    }, [ref, target, popupRef]);
    return ref;
};
