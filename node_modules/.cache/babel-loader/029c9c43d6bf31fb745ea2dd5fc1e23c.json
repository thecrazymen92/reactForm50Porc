{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport * as PopperJS from '@popperjs/core';\nimport { usePopupStack } from '../';\nexport var Popper = React.forwardRef(function (_a, forwardRef) {\n  var _b = _a.portal,\n      portal = _b === void 0 ? true : _b,\n      _c = _a.open,\n      open = _c === void 0 ? true : _c,\n      elemProps = __rest(_a, [\"portal\", \"open\"]);\n\n  var localRef = React.useRef(null);\n  var ref = forwardRef || localRef;\n\n  if (!open) {\n    return null;\n  }\n\n  return React.createElement(OpenPopper, __assign({\n    ref: ref,\n    portal: portal\n  }, elemProps));\n});\n\nvar getElementFromRefOrElement = function getElementFromRefOrElement(input) {\n  if (input === null) {\n    return undefined;\n  } else if ('current' in input) {\n    return input.current || undefined;\n  } else {\n    return input;\n  }\n};\n\nvar createSetPlacementModifier = function createSetPlacementModifier(setPlacement) {\n  return {\n    name: 'setPlacement',\n    enabled: true,\n    phase: 'main',\n    fn: function fn(_a) {\n      var state = _a.state;\n      setPlacement(state.placement);\n    }\n  };\n};\n\nvar defaultPopperOptions = {};\nvar OpenPopper = React.forwardRef(function (_a, forwardRef) {\n  var anchorElement = _a.anchorElement,\n      getAnchorClientRect = _a.getAnchorClientRect,\n      _b = _a.popperOptions,\n      popperOptions = _b === void 0 ? defaultPopperOptions : _b,\n      _c = _a.placement,\n      popperPlacement = _c === void 0 ? 'bottom' : _c,\n      children = _a.children,\n      portal = _a.portal,\n      containerElement = _a.containerElement,\n      elemProps = __rest(_a, [\"anchorElement\", \"getAnchorClientRect\", \"popperOptions\", \"placement\", \"children\", \"portal\", \"containerElement\"]);\n\n  var firstRender = React.useRef(true);\n  var popperInstance = React.useRef();\n\n  var _d = React.useState(popperPlacement),\n      placement = _d[0],\n      setPlacement = _d[1];\n\n  var stackRef = usePopupStack(forwardRef, anchorElement);\n  React.useLayoutEffect(function () {\n    var anchorEl = getAnchorClientRect ? {\n      getBoundingClientRect: getAnchorClientRect\n    } : getElementFromRefOrElement(anchorElement !== null && anchorElement !== void 0 ? anchorElement : null);\n\n    if (!anchorEl) {\n      console.warn(\"Popper: neither anchorElement or getAnchorClientRect was defined. A valid anchorElement or getAnchorClientRect callback must be provided to render a Popper\");\n      return undefined;\n    }\n\n    if (stackRef.current) {\n      popperInstance.current = PopperJS.createPopper(anchorEl, stackRef.current, __assign(__assign({\n        placement: popperPlacement\n      }, popperOptions), {\n        modifiers: __spreadArrays(popperOptions.modifiers || [], [createSetPlacementModifier(setPlacement)])\n      }));\n      return function () {\n        var _a;\n\n        (_a = popperInstance.current) === null || _a === void 0 ? void 0 : _a.destroy();\n      };\n    }\n\n    return undefined;\n  }, [anchorElement, getAnchorClientRect, stackRef]);\n  React.useLayoutEffect(function () {\n    var _a;\n\n    if (!firstRender.current) {\n      (_a = popperInstance.current) === null || _a === void 0 ? void 0 : _a.setOptions(__assign(__assign({\n        placement: popperPlacement\n      }, popperOptions), {\n        modifiers: __spreadArrays(popperOptions.modifiers || [], [createSetPlacementModifier(setPlacement)])\n      }));\n    }\n\n    firstRender.current = false;\n  }, [popperOptions, popperPlacement]);\n  var contents = React.createElement(\"div\", __assign({}, elemProps), isRenderProp(children) ? children({\n    placement: placement\n  }) : children);\n\n  if (!portal) {\n    return contents;\n  }\n\n  return ReactDOM.createPortal(contents, containerElement || stackRef.current);\n});\n\nfunction isRenderProp(children) {\n  if (typeof children === 'function') {\n    return true;\n  }\n\n  return false;\n}","map":null,"metadata":{},"sourceType":"module"}