{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { colors } from '@workday/canvas-kit-react-core';\nimport { type } from '@workday/canvas-kit-labs-react-core';\nimport { TextButtonVariant } from './types';\nimport { styled } from '@workday/canvas-kit-react-common';\nvar Anchor = styled('a')(__assign({\n  fontFamily: type.body.fontFamily\n}, type.variant.link), function (_a) {\n  var variant = _a.variant;\n\n  if (variant === TextButtonVariant.Inverse) {\n    return {\n      color: colors.frenchVanilla100,\n      '&:hover': {\n        color: colors.frenchVanilla100,\n        background: 'rgba(255, 255, 255, 0.1)'\n      },\n      '&:focus': {\n        boxShadow: \"0 0 0 2px \" + colors.frenchVanilla100\n      },\n      '&:active': {\n        color: colors.blueberry600,\n        background: colors.soap200\n      }\n    };\n  }\n\n  return {};\n});\n\nvar Hyperlink = function Hyperlink(_a) {\n  var variant = _a.variant,\n      href = _a.href,\n      elemProps = __rest(_a, [\"variant\", \"href\"]);\n\n  return React.createElement(Anchor, __assign({\n    variant: variant,\n    href: href\n  }, elemProps));\n};\n\nHyperlink.Variant = TextButtonVariant;\nexport default Hyperlink;","map":null,"metadata":{},"sourceType":"module"}