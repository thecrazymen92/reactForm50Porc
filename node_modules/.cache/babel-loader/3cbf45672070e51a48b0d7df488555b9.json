{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport get from 'lodash/get';\nimport { default as colors, typeColors, statusColors } from '@workday/canvas-colors-web';\nimport { borderRadius } from './radius';\nvar inheritFont = typeof window !== 'undefined' && get(window, 'window.workday.canvas.inheritFontFamily');\nexport var fontFamily = inheritFont ? 'inherit' : '\"Roboto\", \"Helvetica Neue\", \"Helvetica\", Arial, sans-serif';\nexport var monoFontFamily = '\"Roboto Mono\", \"Courier New\", Courier, monospace';\nvar hierarchy = {\n  dataViz1: {\n    fontSize: '56px',\n    lineHeight: '68px',\n    fontWeight: 300,\n    color: typeColors.heading\n  },\n  dataViz2: {\n    fontSize: '34px',\n    lineHeight: '40px',\n    fontWeight: 300,\n    color: typeColors.heading\n  },\n  h1: {\n    fontSize: '28px',\n    lineHeight: '36px',\n    fontWeight: 500,\n    color: typeColors.heading\n  },\n  h2: {\n    fontSize: '24px',\n    lineHeight: '32px',\n    fontWeight: 700,\n    color: typeColors.heading\n  },\n  h3: {\n    fontSize: '20px',\n    lineHeight: '28px',\n    fontWeight: 700,\n    color: typeColors.heading\n  },\n  h4: {\n    fontSize: '16px',\n    lineHeight: '24px',\n    fontWeight: 700,\n    color: typeColors.heading\n  },\n  h5: {\n    fontSize: '16px',\n    lineHeight: '24px',\n    fontWeight: 400,\n    color: typeColors.heading\n  },\n  body: {\n    fontSize: '14px',\n    lineHeight: '20px',\n    fontWeight: 400,\n    color: typeColors.body\n  },\n  body2: {\n    fontSize: '13px',\n    lineHeight: '20px',\n    fontWeight: 400,\n    color: typeColors.body\n  },\n  small: {\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontWeight: 400,\n    color: typeColors.body\n  }\n};\nObject.keys(hierarchy).forEach(function (key) {\n  hierarchy[key] = __assign(__assign({}, hierarchy[key]), {\n    fontFamily: fontFamily\n  });\n});\nvar variants = {\n  label: {\n    fontWeight: 500\n  },\n  button: {\n    fontWeight: 500\n  },\n  caps: {\n    fontWeight: 700,\n    textTransform: 'uppercase'\n  },\n  hint: {\n    color: typeColors.hint\n  },\n  error: {\n    color: statusColors.error\n  },\n  inverse: {\n    color: typeColors.inverse\n  },\n  mono: {\n    fontFamily: monoFontFamily\n  },\n  link: {\n    textDecoration: 'underline',\n    color: colors.blueberry400,\n    cursor: 'pointer',\n    borderRadius: borderRadius.s,\n    display: 'inline-block',\n    padding: '0 2px',\n    margin: '0 -2px',\n    transition: 'color 0.15s,background-color 0.15s',\n    '&:hover': {\n      color: colors.blueberry500,\n      background: colors.soap200\n    },\n    '&:focus': {\n      boxShadow: \"0 0 0 2px \" + colors.blueberry400,\n      outline: 'none'\n    },\n    '&:active': {\n      color: colors.blueberry600,\n      background: colors.soap300\n    }\n  }\n};\n\nvar type = __assign(__assign({}, hierarchy), {\n  variant: __assign({}, variants)\n});\n\nexport default type;","map":null,"metadata":{},"sourceType":"module"}