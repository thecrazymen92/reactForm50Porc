{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { default as emotionStyled } from '@emotion/styled';\nimport { useTheme, ContentDirection } from './index';\nimport rtlCSSJS from 'rtl-css-js';\n\nvar noop = function noop(styles) {\n  return styles;\n};\n\nexport var convertToStaticStates = function convertToStaticStates(obj) {\n  if (!obj) {\n    return obj;\n  }\n\n  return Object.keys(obj).reduce(function (result, key) {\n    var _a;\n\n    var newKey = key.replace(/^:/, '&:').replace(/,(\\s+):/g, ',$1&:').replace(/:(focus|hover|active)/g, '.$1').replace(/\\[data\\-whatinput=(\"|')?(mouse|touch|keyboard|pointer)(\"|')?]/g, '[data-whatinput=\"noop\"]');\n    var value = typeof obj[key] === 'object' ? convertToStaticStates(obj[key]) : obj[key];\n\n    var newObj = __assign(__assign({}, result), (_a = {}, _a[newKey] = value, _a));\n\n    return newObj;\n  }, {});\n};\n\nfunction styled(node) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var newArgs = args.map(function (interpolation) {\n      return function (props) {\n        props.theme = useTheme(props.theme);\n        var direction = props.theme.canvas.direction;\n        var maybeFlip = direction === ContentDirection.RTL ? rtlCSSJS : noop;\n        var maybeConvert = props.theme._staticStates ? convertToStaticStates : noop;\n\n        try {\n          if (typeof interpolation === 'function') {\n            return maybeFlip(maybeConvert(interpolation(props)));\n          }\n\n          return maybeFlip(maybeConvert(interpolation));\n        } catch (e) {\n          return maybeConvert(interpolation);\n        }\n      };\n    });\n    return emotionStyled(node)(newArgs);\n  };\n}\n\nexport default styled;","map":null,"metadata":{},"sourceType":"module"}