{"ast":null,"code":"import { ErrorType } from '../types';\nimport { colors, inputColors } from '@workday/canvas-kit-react-core';\nimport chroma from 'chroma-js';\n\nvar isAccessible = function isAccessible(foreground, background) {\n  if (background === void 0) {\n    background = colors.frenchVanilla100;\n  }\n\n  return chroma.contrast(foreground, background) >= 3;\n};\n\nexport function getErrorColors(error, theme) {\n  if (error === ErrorType.Error) {\n    if (theme) {\n      var palette = theme.canvas.palette.error;\n      return {\n        outer: isAccessible(palette.main) ? palette.main : palette.darkest,\n        inner: palette.main\n      };\n    } else {\n      return {\n        outer: inputColors.error.border,\n        inner: inputColors.error.border\n      };\n    }\n  } else if (error === ErrorType.Alert) {\n    if (theme) {\n      var palette = theme.canvas.palette.alert;\n      return {\n        outer: isAccessible(palette.main) ? palette.main : palette.darkest,\n        inner: palette.main\n      };\n    } else {\n      return {\n        outer: colors.cantaloupe600,\n        inner: inputColors.alert.border\n      };\n    }\n  } else {\n    return {};\n  }\n}\nexport function errorRing(error, theme) {\n  if (error !== ErrorType.Error && error !== ErrorType.Alert) {\n    return {};\n  }\n\n  var errorColors = getErrorColors(error, theme);\n  var errorBoxShadow = \"inset 0 0 0 \" + (errorColors.outer === errorColors.inner ? 1 : 2) + \"px \" + errorColors.inner;\n  return {\n    borderColor: errorColors.outer,\n    transition: '100ms box-shadow',\n    boxShadow: errorBoxShadow,\n    '&:hover, &:disabled': {\n      borderColor: errorColors.outer\n    },\n    '&:focus:not([disabled])': {\n      borderColor: errorColors.outer,\n      boxShadow: errorBoxShadow + \",\\n        0 0 0 2px \" + colors.frenchVanilla100 + \",\\n        0 0 0 4px \" + (theme ? theme.canvas.palette.common.focusOutline : inputColors.focusBorder)\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}