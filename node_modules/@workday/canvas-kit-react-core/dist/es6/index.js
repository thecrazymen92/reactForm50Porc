var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import * as canvasColorsWeb from '@workday/canvas-colors-web';
import { borderRadius } from './lib/radius';
import { BrandingColor } from './lib/colors.types';
import depth from './lib/depth';
import InputProvider from './lib/InputProvider';
import spacing, { spacingNumbers, } from './lib/spacing';
import type, { fontFamily, monoFontFamily } from './lib/type';
var colors = canvasColorsWeb.default, gradients = canvasColorsWeb.gradients, semanticColors = __rest(canvasColorsWeb, ["default", "gradients"]);
var canvas = __assign({ colors: colors,
    depth: depth,
    spacing: spacing,
    type: type,
    fontFamily: fontFamily,
    monoFontFamily: monoFontFamily }, semanticColors);
export * from './lib/TypeWrappers';
export * from '@workday/canvas-colors-web';
export { borderRadius, colors, gradients, depth, spacing, spacingNumbers, type, fontFamily, monoFontFamily, BrandingColor, InputProvider, };
export default canvas;
