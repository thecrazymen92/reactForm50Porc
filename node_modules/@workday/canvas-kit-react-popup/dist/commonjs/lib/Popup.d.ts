import * as React from 'react';
import { CanvasDepthValue } from '@workday/canvas-kit-react-core';
import { TransformOrigin } from '@workday/canvas-kit-react-common';
export declare enum PopupPadding {
    zero = "0px",
    s = "16px",
    l = "32px"
}
export interface PopupProps extends React.HTMLAttributes<HTMLDivElement> {
    ariaLabel?: string;
    padding?: PopupPadding;
    transformOrigin?: TransformOrigin | null;
    closeIconSize?: 'small' | 'medium';
    popupRef?: React.Ref<HTMLDivElement>;
    handleClose?: () => void;
    width?: number | string;
    heading?: React.ReactNode;
    depth?: CanvasDepthValue;
    closeButtonAriaLabel?: string;
}
export default class Popup extends React.Component<PopupProps> {
    static Padding: typeof PopupPadding;
    private id;
    private closeButtonRef;
    render(): JSX.Element;
}
export declare const usePopup: <T extends HTMLElement = HTMLElement>() => {
    targetProps: {
        onClick: (event: React.MouseEvent<T, MouseEvent>) => void;
    };
    closePopup(): void;
    popperProps: {
        open: boolean;
        anchorElement: T | null;
        ref: React.RefObject<HTMLDivElement>;
    };
    stackRef: React.RefObject<HTMLDivElement>;
};
//# sourceMappingURL=Popup.d.ts.map